
Show 10 Largest Open Files
lsof / | awk '{ if($7 > 1048576) print $7/1048576 "MB" " " $9 " " $1 }' | sort -n -u | tail

List status of all GIT repos
find ~ -name ".git" 2> /dev/null | sed 's/\/.git/\//g' | awk '{print "-------------------------\n\033[1;32mGit Repo:\033[0m " $1; system("git --git-dir="$1".git --work-tree="$1" status")}'

Generate a sequence of numbers
echo {01..10}

Displays the quantity of connections to port 80 on a per IP basis
clear;while x=0; do clear;date;echo "";echo "  [Count] | [IP ADDR]";echo "-------------------";netstat -np|grep :80|grep -v LISTEN|awk '{print $5}'|cut -d: -f1|uniq -c; sleep 5;done

Convert directory of videos to MP4 in parallel
for INPUT in *.avi ; do echo "${INPUT%.avi}" ; done | xargs -i -P9  HandBrakeCLI -i "{}".avi -o "{}".mp4

Nmap scan every interface that is assigned an IP
ifconfig -a | grep -Po '\b(?!255)(?:\d{1,3}\.){3}(?!255)\d{1,3}\b' | xargs nmap -A -p0-

Corporate random bullshit generator (cbsg)
curl -s http://cbsg.sourceforge.net/cgi-bin/live | grep -Eo '^<li>.*</li>' | sed s,\</\\?li\>,,g | shuf -n 1

Rename all items in a directory to lower case
for i in *; do mv "$i" "${i,,}"; done

Show dd status every so often
watch --interval 5 killall -USR1 dd

Find all log files modified 24 hours ago, and zip them
find . -type f -mtime +1 -name "*.log" -exec zip -m {}.zip {} \; >/dev/null

List IP addresses connected to your server on port 80
netstat -tn 2>/dev/null | grep :80 | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -nr | head

Ternary conditional clause
[ test_statement ] && ( then_statement ) || ( else_statement );

Open another terminal at current location
$TERMINAL & disown

Ban all IPs that attempted to access phpmyadmin on your site
grep "phpmyadmin" $path_to_access.log | grep -Po "^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}" | sort | uniq | xargs -I% sudo iptables -A INPUT -s % -j DROP

Run a command and copy its output to clipboard (Mac OSX)
echo "Here comes the output of my failing code" | tee >(pbcopy)

Change the encoding of all files in a directory and subdirectories
find . -type f  -name '*.java' -exec sh -c 'iconv -f cp1252 -t utf-8 "$1" > converted && mv converted "$1"' -- {} \;

Tree-like output in ls
ls -R | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'

Get executed script's current working directory
CWD=$(cd "$(dirname "$0")" && pwd)

Random Git Commit
git commit -m "$(w3m whatthecommit.com | head -n 1)"

Generate a sequence of numbers
for ((i=1; i<=10; ++i)); do echo $i; done

Compute factorial of positive integer
fac() { (echo 1; seq $1) | paste -s -d\* | bc; }

Find all files recursively with specified string in the filename and output any lines found containing a different string.
find . -name *conf* -exec grep -Hni 'matching_text' {} \; > matching_text.conf.list

Extract your external IP address using dig
dig +short myip.opendns.com @resolver1.opendns.com

Remove offending key from known_hosts file with one swift move
ssh-keygen -R <hostname>

Convert a music file (mp3) to a mp4 video with a static image
ffmpeg -loop_input -i cover.jpg -i soundtrack.mp3 -shortest -acodec copy output_video.mp4

Remove offending key from known_hosts file with one swift move
sed -i 18d .ssh/known_hosts

Create a visual report of the contents of a usb drive
find /path/to/drive -type f -exec file -b '{}' \; -printf '%s\n' | awk -F , 'NR%2 {i=$1} NR%2==0 {a[i]+=$1} END {for (i in a) printf("%12u %s\n",a[i],i)}' | sort -nr

Generate a sequence of numbers
printf '%s\n' {1..10}

Find files/dirs modified within a given period
find . -type d -newermt "2019-01-01" \! -newermt "2019-02-01" -exec ls -ld {} \;

Generate a random 32 characters password
tr -dc 'a-zA-Z0-9~!@#$%^&*_()+}{?></";.,[]=-' < /dev/urandom | fold -w 32 | head -n 1

Search man pages and present a PDF
man -k . | awk '{ print $1 " " $2 }' | dmenu -i -p man | awk '{ print $2 " " $1 }' | tr -d '()' | xargs man -t | ps2pdf - - | zathura -

Kill a process running on port 8080
lsof -i :8080 | awk '{l=$2} END {print l}' | xargs kill

Big CSV > batches > JSON array > CURL POST data with sleep
cat post-list.csv | split -l 30 - --filter='jq -R . | jq --slurp -c .' | xargs -d "\n" -I % sh -c 'curl -H "Content-Type: application/json" -X POST -d '"'"'{"type":1,"entries":%}'"'"' http://127.0.0.1:8080/purge-something && sleep 30'

List all packages with at least a class defined in a JAR file
jar tf "$1" | grep '/.*\.class$' | xargs dirname | sort -u | tr / .

Output an arbitrary number of open TCP or UDP ports in an arbitrary range
comm -23 <(seq "$FROM" "$TO") <(ss -tan | awk '{print $4}' | cut -d':' -f2 | grep "[0-9]\{1,5\}" | sort | uniq) | shuf | head -n "$HOWMANY"

Retrieve dropped connections from firewalld journaling
sudo journalctl -b | grep -o "PROTO=.*" | sed -r 's/(PROTO|SPT|DPT|LEN)=//g' | awk '{print $1, $3}' | sort | uniq -c

Make a new folder and cd into it.
mkcd(){ NAME=$1; mkdir -p "$NAME"; cd "$NAME"; }

Convert all flac files in dir to mp3 320kbps using ffmpeg
for FILE in *.flac; do ffmpeg -i "$FILE" -b:a 320k "${FILE[@]/%flac/mp3}"; done;

Generates random texts
tr -dc a-z1-4 </dev/urandom | tr 1-2 ' \n' | awk 'length==0 || length>50' | tr 3-4 ' ' | sed 's/^ *//' | cat -s | fmt

Find recent logs that contain the string "Exception"
find . -name '*.log' -mtime -2 -exec grep -Hc Exception {} \; | grep -v :0$

Parse nginx statistics output
i=$(curl -s server/nginx_stats); IFS=$'\n'; i=($i); a=${i[0]/Active connections: } && a=${a/ }; r=${i[2]# [0-9]* [0-9]* }; echo "Active: $a, requests: $r"

Install profiling versions of all libghc dpkg packages
sudo dpkg -l | grep libghc | grep "\-dev" | cut -d " " -f 3 | tr '\n' ' ' | sed -e 's/\-dev/\-prof/g' | xargs sudo apt-get install --yes

Have script run itself in a virtual terminal
tty >/dev/null || { urxvt -hold -e "$0" "$@" & exit; }

Remove .DS_Store from the repository you happen to staging by mistake
find . -name .DS_Store -exec git rm --ignore-unmatch --cached {} +

Get mac address from default interface OS X 
netstat -rn | awk '/default/ { print $NF }' | head -1 | xargs -I {}  ifconfig {} | awk '/ether/ {print $2}'

Dump network traffic with tcpdump to file with time-stamp in its filename
date +"%Y-%m-%d_%H-%M-%Z" | xargs -I {} bash -c "sudo tcpdump -nq -s 0 -i eth0 -w ./dump-{}.pcap"

Remove files and directories whose name is a timestamp older than a certain time
ls | grep '....-..-..-......' | xargs -I {} bash -c "[[ x{} < x$(date -d '3 days ago' +%Y-%m-%d-%H%M%S) ]] && rm -rfv {}"

Unhide all hidden files in the current directory.
find . -maxdepth 1 -type f -name '\.*' | sed -e 's,^\./\.,,' | sort | xargs -iname mv .name name

Create a thumbnail from the first page of a PDF file
convert -thumbnail x80 file.pdf[0] thumb.png

Send HTTP POST to a website with a file input field
curl -L -v -F "value=@myfile" "http://domain.tld/whatever.php"

Rename all files in the current directory by capitalizing the first letter of every word in the filenames
ls | perl -ne 'chomp; $f=$_; tr/A-Z/a-z/; s/(?<![.'"'"'])\b\w/\u$&/g; print qq{mv "$f" "$_"\n}'

Remove spaces recursively from all subdirectories of a directory
find /path/to/dir -type d | tac | while read LINE; do target=$(dirname "$LINE")/$(basename "$LINE" | tr -d ' '); echo mv "$LINE" "$target"; done

Rename all files in a directory to lowercase names
paste <(ls) <(ls | tr A-Z a-z) | while read OLD NEW; do echo mv -v $OLD $NEW; done

Get a wide info of all pods on all namespaces with Kubectl
kubectl get pods -A -o wide

Report disk usage by file type
find . -type f -empty -prune -o -type f -printf "%s\t" -exec file --brief --mime-type '{}' \; | awk 'BEGIN {printf("%12s\t%12s\n","bytes","type")} {type=$2; a[type]+=$1} END {for (i in a) printf("%12u\t%12s\n", a[i], i)|"sort -nr"}'

Outputs list of $PATH dirs sorted by line length
echo -e ${PATH//:/\\n} | awk '{print length, $0}' | sort -n | cut -f2- -d' '

Using a single sudo to run multiple && arguments
sudo -s <<< 'apt update -y && apt upgrade -y'

Generate a sequence of numbers
for i in {1..10};do echo $i;done

Scan all open ports without any required program
for i in {1..65535}; do (echo < /dev/tcp/127.0.0.1/$i) &>/dev/null && printf "\n[+] Open Port at\n: \t%d\n" "$i" || printf "."; done

Using tcpdump with port ranges and file count/size
sudo /usr/sbin/tcpdump -i any -s 0 -n -Z <user_name> -C 500 -W 100 -w /home/<user_name>/$(hostname).pcap -f '(port (# or # or # or # or # or # or ...) or portrange <start>-<end>)' &>/dev/null

Compare (diff) vim-generated backup of a file with that file's current version.
diff~() { diff "$1"~ "$1"; }

Count the total number of hours of your music collection
find . -print0 | xargs -0 -P 40 -n 1 sh -c 'ffmpeg -i "$1" 2>&1 | grep "Duration:" | cut -d " " -f 4 | sed "s/.$//" | tr "." ":"' - | awk -F ':' '{ sum1+=$1; sum2+=$2; sum3+=$3; sum4+=$4; if (sum4 > 100) { sum3+=1; sum4=0 }; if (sum3 > 60) { sum2+=1; sum3=0 }; if (sum2 > 60) { sum1+=1; sum2=0 } if (NR % 100 == 0) { printf "%.0f:%.0f:%.0f.%.0f\n", sum1, sum2, sum3, sum4 } } END { printf "%.0f:%.0f:%.0f.%.0f\n", sum1, sum2, sum3, sum4 }'

Clear the Exim Queue (remove all messages)
exim -bp | exiqgrep -i | xargs exim -Mrm

Check if a text snippet is valid C code
gcc -fsyntax-only -xc - <<< "text snippet"

Inspect the HTTP headers of a website
curl -I amazon.com

Random 6-digit number
python -c 'import random; print(random.randint(0,1000000-1))'

Very fast history search with Ripgrep
rh() { rg "$1" ~/.bash_history }

Scan entire Git repo for dangerous Amazon Web Service IDs
git grep -Ew '[A-Z0-9]{20}'

Dump all AWS IAM users/roles to a Terraform file for editing / reusing in another environment
echo iamg iamgm iamgp iamip iamp iampa iamr iamrp iamu iamup | AWS_PROFILE=myprofile xargs -n1  terraforming

List open processes ordered by it's number of open files
ps -ef |awk '{ print $2 }' \ 	|tail -n +2 \ 	|while read pid; do echo "$pid	$(lsof -p $pid |wc -l)"; done \ 	|sort -r -n -k 2 \ 	|while read pid count; do echo "$pid	$count	$(ps -o command= -p $pid)"; done

Take values from a list (file) and search them on another file
for ITEM in $(cat values_to_search.txt); do  (egrep $ITEM full_values_list.txt && echo $ITEM found) | grep "found" >> exit_FOUND.txt; done

Have script run itself in a virtual terminal
tty >/dev/null || { urxvt -e /bin/sh -c "tty >/tmp/proc$$; while test x; do sleep 1; done" & while test ! -f /tmp/proc$$; do sleep .1; done; FN=$(cat /tmp/proc$$); rm /tmp/proc$$; exec >$FN 2>$FN <$FN; }

Blackhole ru zone
echo "address=/ru/0.0.0.0" | sudo tee /etc/NetworkManager/dnsmasq.d/dnsmasq-ru-blackhole.conf && sudo systemctl restart network-manager

Kill a process running on port 8080
lsof -i :8080 | awk 'NR > 1 {print $2}' | xargs --no-run-if-empty kill

Kill a process running on port 8080
lsof -i :8080 | awk '{print $2}' | tail -n 1 | xargs kill

Get the latest Arch Linux news
w3m https://www.archlinux.org/ | sed -n "/Latest News/,/Older News/p" | head -n -1

Listen to the radio (radio2 in example)
mpv http://a.files.bbci.co.uk/media/live/manifesto/audio/simulcast/hls/uk/sbr_med/llnw/bbc_radio_two.m3u8

Go up to a particular folder
alias ph='cd ${PWD%/public_html*}/public_html'

Preserve your fingers from cd ..; cd ..; cd..; cd..;
up(){ DEEP=$1; for i in $(seq 1 ${DEEP:-"1"}); do cd ../; done; }

List the content of a GitHub repository without cloning it
svn ls https://github.com/user/repo/trunk/some/path

Delete static and dynamic arp for /24 subnet
for i in {1..254}; do arp -d 192.168.0.$i; done

Shuffle lines
... | perl -MList::Util=shuffle -e 'print shuffle <>;'

Preserve your fingers from cd ..; cd ..; cd..; cd..;
upup(){ DEEP=$1; [ -z "${DEEP}" ] && { DEEP=1; }; for i in $(seq 1 ${DEEP}); do cd ../; done; }

Get number of all Python Behave scenarios (including all examples from Scenario Outlines)
behave -d | grep "scenarios passed" | cut -d, -f4 | sed -e 's/^[[:space:]]*//' | sed 's/untested/scenarios/g'

Download a file from a webserver with telnet
(echo 'GET /'; echo; sleep 1; ) | telnet www.google.com 80

Print a flat list of dependencies of a Maven project
mvn dependency:list | sed -ne s/..........// -e /patterntoexclude/d -e s/:compile//p -e s/:runtime//p | sort | uniq

Open Windows internet shortcut (*.url) files in firefox
grep -i url='*' file.url | cut -b 5- | xargs firefox

Remove all at jobs
atq | sed 's_\([0-9]\{1,8\}\).*_\1_g' | xargs atrm

Deletes orphan vim undo files
find . -type f -iname '*.un~' | while read UNDOFILE ; do FILE=$( echo "$UNDOFILE" | sed -r -e 's/.un~$//' -e 's&/\.([^/]*)&/\1&' ) ; [[ -e "$FILE" ]] || rm "$UNDOFILE" ; done

Extensive "cleanup" operations following "sudo yum upgrade"
sudo yum upgrade && for pkg in $(package-cleanup --orphans -q); do repoquery $(rpm -q $pkg --queryformat="%{NAME}") | grep -q ".*" && echo $pkg; done | xargs sudo yum -y remove && for pkg in $(package-cleanup --leaves --all -q); do repoquery --groupmember $pkg | grep -q "@" || echo $pkg; done

Get average CPU temperature from all cores.
__=`sensors | grep Core` && echo \(`echo $__ | sed 's/.*+\(.*\).C\(\s\)\+(.*/\1/g' | tr "\n" "+" | head -c-1`\)\/`echo $__ | wc -l` | bc && unset __

Concatenate multiple SSL certificate files to make one PEM file
files=("yourcert.crt" "provider.ca.pem") && for i in ${files[@]} ; do $(cat $i >> yourcert.pem && echo "" >> yourcert.pem) ; done

List all non Git comited files and make a gzip archive with them
GITFOLDER="/srv/some/folder"   ls-files --others --exclude-standard | tar czf ${GITFOLDER}-archives/uploads-$(date '+%Y%m%d%H%M').tar.gz -T -

Converts DD/MM/YYYY date format to ISO-8601 (YYYY-MM-DD)
sed 's_\([0-9]\{1,2\}\)/\([0-9]\{1,2\}\)/\([0-9]\{4\}\)_\3-\2-\1_g'

Counting the number of commas in CSV format
perl -ne 'print tr/,//, "\n"' < file.csv | sort -u

Find which log files contain or don't contain a specific error message
for i in *.log; do grep OutOfMemo $i >/dev/null && echo $i oom || echo $i ok; done

Convert text from decimal to little endian hexadecimal
echo $(printf %08X 256 | grep -o .. | tac | tr -d '\n')

Md5sum the last 5 files in a folder
find /directory1/directory2/ -maxdepth 1 -type f | sort | tail -n 5 | xargs md5sum

Create a transparent image of given dimensions
convert -size 100x100 xc:none transparency.png

Print a random cat
wget -O - http://placekitten.com/$[500 + RANDOM % 500] | lp

Insert lines from one text file to another one
sed -re ':a;Rfile1' -e 'x;s/^/./;/.{10}/!{x;ba};s/.*//;x' file2

Send a file by email as attachment
uuencode /var/log/messages messages.txt | mailx -s "/var/log/messages on $HOST" me@example.com

Get only the latest version of a file from across mutiple directories.
find . -name 'filename' | xargs -r ls -tc | head -n1

Sort and remove duplicate lines from two (or more files). Display only uniq lines from files.
sort file1 file2 | uniq -u

Get load average in a more parse-able format
python -c 'import os; print os.getloadavg()[0]'

Function to extract columns from an input stream
col() { awk '{print $('$(echo $* | sed -e s/-/NF-/g -e 's/ /),$(/g')')}'; }

Define an own watch(1)-like function
watch () { interrupted=false; trap "interrupted=true" INT; while ! $interrupted; do $*; sleep 1 || interrupted=true; done; }

Remove offending key from known_hosts file with one swift move
vi +18d +wq ~/.ssh/known_hosts

Replace the header of all files found.
find . -type f -name '*.html' -exec sed -i -e '1r common_header' -e '1,/STRING/d' {} \;

Redirect stdout to a file you don't have write permission on
echo hello | sudo tee -a /path/to/file

`tail -f` a file until text is seen
tail -f /path/to/file.log | sed '/^Finished: SUCCESS$/ q'

Recording SSH sessions
ssh -l USER HOST | tee -a /path/to/file

Record audio from microphone or sound input from the console
sox -t ossdsp -w -s -r 44100 -c 2 /dev/dsp -t raw - | lame -x -m s - File.mp3

Use vim to pretty-print code with syntax highlighting
vim +'hardcopy > output.ps' +q style.css 

Log and verify files received via FTP
for i in $(cat /var/log/vsftpd.log | grep $DATE_TIME | grep UPLOAD | grep OK); do ls /FTP/HOME/$i >> /dev/null 2> \&1; if \[ $? = 0 \]; then echo "$i" >> $FILES_OK_UPLOADS.log; else  echo "$DATE ERROR: File $i not found" >> $FTP_FILES_NOTOK_$DATE_TIME.log; fi; done

Edit the Gimp launcher file to disable the splash screen
printf '%s\n' ',s/^Exec=[^ ]*/& -s/' w q | ed /usr/share/applications/gimp.desktop

Faster disk imaging with dd
dd if=/dev/sda bs=$(hdparm -i /dev/sda | grep BuffSize | cut -d ' ' -f 3 | tr [:lower:] [:upper:] | tr -d BUFFSIZE=,) conv=noerror | dd of=image.dd conv=noerror

Convert a decimal number to octal, hexadecimal, binary, or anything
bc <<< 'obase=2;1234'

Remove carriage return '\r' character in many files, without looping and intermediary files
vi +'bufdo set ff=unix' +'bufdo %s/^M$//' +q file1 file2 file3

Sort and remove duplicate lines in a file in one step without intermediary files
vi +'%!sort | uniq' +wq file.txt

Show files containing "foo" and "bar" and "baz"
grep -l 'baz' $(grep -l 'bar' $(grep -lr 'foo' *) )

Find in files, recursively
grep -rn 'nameserver' /etc 2>/dev/null

Calculate the total disk space used by a list of files or directories
du -cshx ./a ./b

Create a compressed tar file that rsync will transfer efficiently
GZIP='--rsyncable' tar cvzf bobsbackup.tar.gz /home/bob

Cut select pages from a pdf file and create a new file from those pages.
ps2pdf -dFirstPage=3 -dLastPage=10 input.pdf output.pdf

View a file with line numbers
cat -n /path/to/file | less

Print the lines of file2 that are missing in file1
comm -23 file2 file1

Uses 'at' to run an arbitrary command at a specified time.
echo 'play alarmclock.wav 2>/dev/null' | at 07:30 tomorrow

Calculate an h index from an EndNote export
MAX=$(NUM=1;cat author.xml |perl -p -e 's/(Times Cited)/\n$1/g'|grep "Times Cited" |perl -p -e 's/^Times Cited:([0-9]*).*$/$1/g'|sort -nr | while read LINE; do if [ $LINE -ge $NUM ]; then echo "$NUM"; fi; NUM=$[$NUM+1]; done;); echo "$MAX"|tail -1

Cut select pages from a pdf file and create a new file from those pages.
 pdftk input.pdf cat 2-4 7 9-10 output output.pdf

Re-compress a gzip (.gz) file to a bzip2 (.bz2) file
time gzip -cd file1.tar.gz 2>~/logfile.txt | pv -t -r -b -W -i 5 -B 8M | bzip2 > file1.tar.bz2 2>>~/logfile .txt

Test your hard drive speed
time (dd if=/dev/zero of=zerofile bs=1M count=500;sync);rm zerofile

Recursively remove all empty sub-directories from a directory tree
find . -depth  -type d  -empty -exec rmdir {} \;

Group count sort a log file
A=$(FILE=/var/log/myfile.log; cat $FILE | perl -p -e 's/.*,([A-Z]+)[\:\+].*/$1/g' | sort -u | while read LINE; do grep "$LINE" $FILE | wc -l | perl -p -e 's/[^0-9]+//g'; echo -e "\t$LINE"; done;);echo "$A"|sort -nr

Use ghostscript to shrink PDF files
gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook -dNOPAUSE -dQUIET -dBATCH -sOutputFile=output.pdf input.pdf

How to find all hard links to a file
find /home -xdev -samefile file1

Find all the unique 4-letter words in a text
cat ipsum.txt | perl -ne 'print map("$_\n", m/\w+/g);' | tr A-Z a-z | sort | uniq | awk 'length($1) == 4 {print}'

Concatenate two or more movie files into one using mencoder
mencoder cd1.avi cd2.avi -o movie.avi -ovc copy -oac copy

Calculate the average execution time (of short running scripts) with awk
for i in {1..10}; do time some_script.sh; done 2>&1 | grep ^real | sed -e s/.*m// | awk '{sum += $1} END {print sum / NR}'

A convenient way to re-run the previous command with sudo
sudo !!

Rotate a movie file with mencoder
mencoder video.avi -o rotated-right.avi -oac copy -ovc lavc -vf rotate=1

View specific column of data from a large file with long lines
cat /tmp/log.data |colrm 1 155|colrm 60 300

Aliases the ls command to display the way I like it
alias ls='ls -lhGpt --color=always'

Replace a regexp pattern in many files at once
vi +'bufdo %s/pattern/replacement/g | update' +q $(grep -rl pattern /path/to/dir)

Generate a sequence of numbers
seq 1 10

Listen to a song from youtube
listen-to-yt() { if [[ -z "$1" ]]; then echo "Enter a search string!"; else mpv "$(youtube-dl --default-search 'ytsearch1:' \"$1\" --get-url | tail -1)"; fi }

Generate a sequence of numbers
perl -e 'print "$_\n" for (1..10);'

Find all of the distinct file extensions in a folder
find . -type f | perl -ne 'print $1 if m/\.([^.\/]+)$/' | sort -u

Convert pip list --outdated for reuse in pip install -U
pip install -U $(pip list --outdated 2> /dev/null | grep -v 'Version' | grep -v '------' | awk '{printf $1 " " }' && echo)

Delete all untagged Docker images
docker rmi $(docker images -f "dangling=true" -q)

Get a free shell account on a community server
sh <(curl hashbang.sh | gpg)

Run a local shell script on a remote server without copying it there
ssh user@server bash < /path/to/local/script.sh

Oneliner checksum validation
sha512sum filename.iso | grep -oE ".*\ " | (read checksum; [ "$Checksum" ==  checksumCheck ] && printf "\033[0;32mValid" || printf "\033[0;31mInvalid")

Move file and cd with one command
mv file dir && cd "$_"  && pwd

Find with invert match - e.g. find every file that is not mp3
find . -name '*' -type f -not -path '*.mp3'

Convert pip list --outdated for reuse in pip install -U
python3 -m pip install -U $(python3 -m pip list outdated 2> /dev/null | grep -v 'Version' | grep -v '\-\-\-\-\-\-' | awk '{printf $1 " " }' && echo)

Recursively remove all "node_modules" folders
find . -name "node_modules" -exec rm -rf '{}' +

Read other user's shell history, and convert epoch to human-readable date
cat /home/john/.bash_history | awk '/#[0-9]*$/ {split($0, arr, "#"); print "#", strftime("%c",arr[2]);getline; print; }'

Prints "Good" in green if the sha256 sum of a file matches the sum listed in a dist/checksum file and "Bad" in red if it does not match
[[ $(sha256sum _downloaded_file_ | cut -d' ' -f 1) == $(grep -Po '\b[a-zA-Z0-9]{64}\b' _checksum_fle_) ]] && printf "\033[0;32mGood" || printf "\033[0;31mBad"

(Pseudo)random 6-digit number
let N=0 N=N+10**{0..5}*${RANDOM:0:1}

Compute factorial of positive integer using only built-ins
bang() ( eval let N=1 N*={1..$1} ; echo $N; )

Recursively compute factorial of positive integer using only built-ins
bang() ( IFS=\*; let N=$1-1 k="$*" && bang $N $k || echo ${2-1} )

List docker log sizes and remind how to empty them
docker ps -qa | xargs docker inspect --format='{{.LogPath}}' | xargs sudo du -hl; sleep 1; printf "\r\n  echo '' > \$(docker inspect --format={{.LogPath}} container_name_or_id) \r\n*****COPY****ABOVE****TO******CLEAR*****LOG*****CHANGE***CONTAINER_ID******* \r\n \n"

Extract audio only from video files using ffmpeg
ffmpeg -i video.any -vn -acodec libvorbis audio.ogg

Print the list of your Git commits this month
git log --since='last month' --author="$(git config user.name)" --oneline

Store the output of find in an array
mapfile -d $'\0' arr < <(find /path/to -print0)

While loop to pretty print system load (1, 5 & 15 minutes)
while :; do date; awk '{printf "1 minute load: %.2f\n", $1; printf "5 minute load: %.2f\n", $2; printf "15 minute load: %.2f\n", $3}' /proc/loadavg; sleep 3; done

Scan entire Git repos for dangerous Amazon Web Service IDs
git ls-tree --full-tree -r --name-only HEAD | xargs egrep -w '[A-Z0-9]{20}'

While loop to pretty print system load (1, 5 & 15 minutes)
while [ 1 == 1 ]; do  cat /proc/loadavg | awk '{printf "1 minute load: %.2f\n", $(NF-5)}' && cat /proc/loadavg |awk '{printf "5 minute load: %.2f\n", $(NF-3)}' && cat /proc/loadavg |awk '{printf "15 minute load: %.2f\n", $(NF-2)}'; sleep 3; date; done

Organise image by portrait and landscape
mkdir "portraits"; mkdir "landscapes"; for f in ./*.jpg; do WIDTH=$(identify -format "%w" "$f")> /dev/null; HEIGHT=$(identify -format "%h" "$f")> /dev/null; if [[ "$HEIGHT" > "$WIDTH" ]]; then mv "$f" portraits/ ; else mv "$f" landscapes/ ; fi; done

Create a txt files with 10000 rows
for FILE in *.full ; do split -l 100000 $FILE; mv -f xaa `echo "$FILE" | cut -d'.' -f1`.txt; rm -f x*; done

Remove all container from an specific network (docker)
docker ps -a -f network=$NETWORK --format='{{.ID}}' | xargs docker rm -f

Up all docker services as detached mode over all immediate subdirectories
for dir in $(ls -d */); do eval $(cd $PWD/$dir && docker-compose up -d && cd ..); done;

Find and replace string inside specific files
grep -ril '$SEARCH_PATTERN' src | sed -i 's/$FIND_PATTERN/$REPLACE_PATTERN/g'

Puppet/Bash:  test compare json objects.
unless => "client_remote=\"$(curl localhost:9200/_cluster/settings | python -c \"import json,sys;obj=json.load(sys.stdin);print(obj['persistent']['search']['remote'])\")\"; new_remote=\"$( echo $persistent_json | python -c \"import json,sys;obj=json.load(sys.stdin);print(obj['persistent']['search']['remote'])\")\"; [ \"$client_remote\" = \"$new_remote\" ]",

Get only the latest version of a file from across mutiple directories
find . -name custlist\* | perl -ne '$path = $_; s?.*/??; $name = $_; $map{$name} = $path; ++$c; END { print $map{(sort(keys(%map)))[$c-1]} }'

Recreate or update an existing zip file and remove files that do not exist anymore
zip --filesync -r /path/to/out.zip /path/to/dir

How to expand a CIDR notation to its IPs
for j in $(seq 0 255); do for i in $(seq 0 255) ; do seq -f "10.$j.$i.%g" 0 255; done; done

Make the output of the `time` builtin easier to parse
TIMEFORMAT=%R

Remove EXIF data such as orientation from images
mogrify -strip /path/to/image.jpg

Get the last modification date of a file in any format you want
date -r /etc/motd +%Y%m%d_%H%M%S

Forget all remembered path locations
hash -r

Rename files with numeric padding
perl -e 'for (@ARGV) { $o = $_; s/\d+/sprintf("%04d", $&)/e; print qq{mv "$o" "$_"\n}}'

Copy or create files with specific permissions and ownership
install -b -m 600 /dev/null NEWFILE

Run command multiple times with a for loop and a sequence expression
for i in {1..10}; do date; sleep 1; done

Clear the swap space forcing everything back to main memory in Linux
sudo swapoff -a; sudo swapon -a

Redirection operator to override the noclobber option
some_command >| output.txt

How to set the ip address in Solaris 11
ipadm create-addr -T static -a 192.168.1.10/24 eth0/staticaddr

Edit the Gimp launcher file to disable the splash screen
sudo sed -i 's/^Exec=[^ ]*/& -s/' /usr/share/applications/gimp.desktop

`less` is more convenient with the `-F` flag
less -F FILE1

Append to a file text, a blank line, and the last line of another file
{ echo some text; echo; tail -n1 /var/log/apache2/error.log; } >> /path/to/file

Append to a file text, a blank line, and the last line of another file
echo -e "From: me\n\n$(tail -n1 /var/log/apache2/error.log)" >> file

Convert a list of terms in slug format to capitalized words
sed -e 's/^./\U&/' -e 's/_./\U&/g' -e 's/_/ /g' /path/to/input

Execute different commands with find depending on file type
find /path/to/dir -type d -exec chmod 0755 '{}' \; -o -type f -exec chmod 0644 '{}' \;

Convert m4a files to mp3 using faad and lame
faad -o tmp.wav music.m4a && lame -b 192 tmp.wav music.mp3

Write both stdout and stderr to the same file
do_something.sh &> out.log

Create or mount an encrypted directory using encfs
encfs -i 5 $PWD/raw $PWD/content

Run a never-ending process in the background in a way that you can check on its status anytime
screen -d -m -S some_name ping my_router

Make a hexdump or do the reverse with the xxd command
xxd /path/to/binary/file

Really lazy way to print the first instance of $foo that occurs after $bar
ifconfig | grep ^en1 -A5 | grep inet | head -n 1

Print the first instance of $foo that occurs after $bar
sed -n '\@interface Ethernet3/1@,/!/ s/ip address/&/p' file...

Print the first instance of $foo that occurs after $bar
awk '/interface Ethernet3\/1/ {instanza=1} /!/ {instanza=0} instanza && /ip address/ {print}' file...

Sort du output in Human-readable format
du -hsx * | sort -rh

Replace symlinks with the actual files they are pointing at
find /path/to/dir -type l -exec sh -c 'cp --remove-destination "$(readlink "{}")" "{}"' \; 

Expire a user's password immediately
chage -d 0 USERNAME

Convert any 16:9 video to play on a QHD widescreen Android phone
ffmpeg -i $1 -y -threads 0 -subq 6 -deinterlace -level 30 -f mp4 -acodec libfaac -ab 160k -ar 24000 -ac 2 -vcodec libx264 -b 1000k -maxrate 1000k -bufsize 2000k -rc_eq 'blurCplx^(1-qComp)' -qcomp 0.6 -qmin 10 -qmax 51 -qdiff 4 -coder 0 -refs 2 -flags +loop -vol 256 -trellis 1 -me_method umh -async 1 $2

Sort du output in Human-readable format
for i in G M K; do du -hsx * | grep "[0-9]$i\b" | sort -nr; done 2>/dev/null

Sort du output in Human-readable format
for i in $(echo -e 'G\nM\nK'); do du -hsx /* 2>/dev/null | grep '[0-9]'$i | sort -rn; done

Convert a decimal number to octal, hexadecimal, binary, or anything
echo 'obase=2;1234' | bc

Convert from avi format to mp4 encoding
ffmpeg -i file.avi file.mp4

Format input into multiple columns, like a table, useful or pretty-printing
mount | column -t

Function to extract columns from an input stream
col() { awk '{print $'$(echo $* | sed -e 's/ /,$/g')'}'; }

Resize an image proportionally to some specified width or height
mogrify -geometry x31 path/to/image.gif

Do something in another directory without going there
(cd /path/to/somewhere; tar c .) > somewhere.tar

Remove carriage return '\r' character in many files, without looping and intermediary files
recode pc..l1 file1 file2 file3

Find the target path a symlink is pointing to
readlink a_symbolic_link_to_somewhere

Get the octal, hexadecimal and decimal codes of the ASCII character set
man ascii

List or edit and re-execute commands from the history list
fc -l

Find the most recently modified files in a directory and all subdirectories
find /path/to/dir -type f -mtime -7 -print0 | xargs -0 ls -lt | head

List open files
lsof -n

Set a colorful bash prompt per dev test prod environments
PS1='\[\e[1;31m\][\u@\h \W]\$\[\e[0m\] '

Calculate the total disk space used by a list of files or directories
du -c

Print the lines of file2 that are missing in file1
grep -vxFf file1 file2

Find in files, recursively
find /etc -type f -print0 2>/dev/null | xargs -0 grep --color=AUTO -Hn 'nameserver' 2>/dev/null

Concatenate PDF files using GhostScript
gs -dNOPAUSE -sDEVICE=pdfwrite -sOUTPUTFILE=output.pdf -dBATCH file1.pdf file2.pdf file3.pdf

Format text with long lines to text with fixed width
fmt -s -w80 file.txt

Come back quickly to the current directory after doing some temporary work somewhere else
pushd /some/where/else; work; cd /somewhere; work; cd /another/place; popd

Export a git project to a directory
git archive master | tar x -C /path/to/dir/to/export

Delete all tables of a mysql database
mysql --defaults-file=my.cnf -e 'show tables' | while read t; do mysql --defaults-file=my.cnt  -e 'drop table '$t; done

Run remote X11 applications with ssh
ssh -X servername

Calculate the total disk space used by a list of files or directories
du -s file1 dir1 | awk '{sum += $1} END {print sum}'

Check the performance of a script by re-running many times while measuring the running time
for i in {1..10}; do time curl http://localhost:8000 >/dev/null; done 2>&1 | grep real

Put an ssh session in the background
~^z

Recursively remove all empty sub-directories from a directory tree
find . -type d | tac | xargs rmdir 2>/dev/null

Remove all the versioned-but-empty directories from a Subversion checkout
find . -name .svn -type d | while read ss; do dir=$(dirname "$ss"); test $(ls -a "$dir" | wc -l) == 3 && echo "svn rm \"$dir\""; done

Create a sequence of integer numbers
echo {4..-9}

Redirect the output of the time builtin command
{ time command; } > out.out 2> time+err.out

Copy a directory with a large number of files to another server
tar cp -C /path/to/dir . | ssh server2 'tar x -C /path/to/target'

Redirect the output of multiple commands 
{ cmd1 ; cmd2 ; cmd3 ; } > out.out 2> err.out

View a file with line numbers
grep -n ^ /path/to/file | less

Print the n-th and m-th line of a file
sed -ne '101 p' -e '106 p' /path/to/the/file

Repeat the previous command but with a string replacement
^geomtry^geometry

Do not save command history of current bash session
HISTFILE=

Use rsync instead of cp to get a progress indicator when copying large files
rsync --progress largefile.gz somewhere/else/

Unpack all of the .tar.bz2  files in current directory
for FILE in *; do tar -jxf $FILE; done

Create and restore backups using cpio
find . -xdev -print0 | cpio -oa0V | gzip > path_to_save.cpio.gz

Alert me by email when a disconnected or unreachable server comes back online
while ! ping -c1 the_host_down; do sleep 1; done && date | mail -s 'the host is back!' me@example.com

Add timestamp to the output of ping
ping some_host | while read LINE; do echo $(date): $LINE; done

Test a one-liner with echo commands first, pipe to bash when ready
paste <(ls) <(ls | tr A-Z a-z) | while read OLD NEW; do echo mv -v $OLD $NEW; done | sh

Find the most recently modified files in a directory and all subdirectories
find /path/to/dir -type f | perl -ne 'chomp(@files = <>); my $p = 9; foreach my $f (sort { (stat($a))[$p] <=> (stat($b))[$p] } @files) { print scalar localtime((stat($f))[$p]), "\t", $f, "\n" }' | tail

Delete unversioned files in a Subversion checkout directory and all subdirectories
svn st | grep ^? | sed -e 's/^? *//' | xargs -i{} echo rm -fr "{}"

Get the available space on a partition as a single numeric value
df /path/to/dir | sed -ne 2p | awk '{print $4}'

Schedule a one-time task using "at" command and intuitive date specifications
at now + 30 minutes

The first command you should run right after you login to a remote server ;-)
screen

Find video files cached by the flash plugin in browsers
file /proc/*/fd/* 2>/dev/null | grep Flash | cut -f1 -d:

Force the preferred language when downloading a web page with wget
wget -–header='Accept-Language: en-us' http://www.timeanddate.com/calendar/index.html?year=2008&country=26 -O calendar.html

Burn the contents of a directory to dvd without needing a gui application
growisofs -dvd-compat -Z /dev/scd0 -R -J -pad /path/to/dir

Convert all flac files in the current directory to mp3 format using "lame"
for i in *.flac; do flac -c -d "$i" | lame -m j -b 192 -s 44.1 - "${i%.flac}.mp3"; done

Halt the system in Linux without the halt command or gui
echo o > /proc/sysrq-trigger

Change to the previous directory, a shortcut for "cd $OLDPWD"
cd -

Create an encrypted tar file with openssl
tar c paths_to_files_and_dirs | gzip -c | openssl des3 > encrypted.tar.gz

Make another user superuser in Ubuntu
for i in $(grep :boss /etc/group | cut -f1 -d:); do adduser wife $i; done

Change the label of a USB drive in Linux without a gui
sudo mlabel -i /dev/sdd1 ::NewLabel

Mirror from one Subversion repository to another Subversion repository
bzr co https://repo1/proj1/trunk proj1 && cd proj1 && bzr push https://repo2/vendor/proj1/trunk

Find Flash videos stored by browsers on a Mac
find /private/ 2>/dev/null | grep /Flash
